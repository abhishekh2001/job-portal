[{"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\index.js":"1","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\App.js":"2","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\Home.js":"3","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\services\\authService.js":"4","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\Register.js":"5","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\forms\\RecruiterForm.js":"6","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\ApplicantRegister.js":"7","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\forms\\ApplicantForm.js":"8","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\RecruiterRegister.js":"9","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\styles\\formStyles.js":"10","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\Login.js":"11","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\forms\\LoginForm.js":"12","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\recruiters\\JobPostDashboard.js":"13","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\listitems.js":"14","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\forms\\JobPostForm.js":"15","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\utils\\typeOfJob.js":"16","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\utils\\languages.js":"17","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\utils\\duration.js":"18","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\context\\auth.js":"19","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\PrivateRoute.js":"20","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\services\\jobService.js":"21","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\Admin.js":"22","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\AppToolBar.js":"23","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\Test.js":"24","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\styles\\generalStyles.js":"25","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\recruiters\\JobListDashboard.js":"26","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\services\\recruiterService.js":"27"},{"size":197,"mtime":1610642890982,"results":"28","hashOfConfig":"29"},{"size":2437,"mtime":1610825243041,"results":"30","hashOfConfig":"29"},{"size":435,"mtime":1610823336951,"results":"31","hashOfConfig":"29"},{"size":406,"mtime":1610725898989,"results":"32","hashOfConfig":"29"},{"size":2507,"mtime":1610644158164,"results":"33","hashOfConfig":"29"},{"size":7556,"mtime":1610823535898,"results":"34","hashOfConfig":"29"},{"size":245,"mtime":1610652752887,"results":"35","hashOfConfig":"29"},{"size":12898,"mtime":1610810492216,"results":"36","hashOfConfig":"29"},{"size":276,"mtime":1610823452238,"results":"37","hashOfConfig":"29"},{"size":598,"mtime":1610815350789,"results":"38","hashOfConfig":"29"},{"size":178,"mtime":1610652454127,"results":"39","hashOfConfig":"29"},{"size":4549,"mtime":1610736503331,"results":"40","hashOfConfig":"29"},{"size":911,"mtime":1610824904725,"results":"41","hashOfConfig":"29"},{"size":2323,"mtime":1610715488804,"results":"42","hashOfConfig":"29"},{"size":10773,"mtime":1610821864293,"results":"43","hashOfConfig":"29"},{"size":77,"mtime":1610720586883,"results":"44","hashOfConfig":"29"},{"size":76,"mtime":1610720139199,"results":"45","hashOfConfig":"29"},{"size":52,"mtime":1610724683568,"results":"46","hashOfConfig":"29"},{"size":165,"mtime":1610731683357,"results":"47","hashOfConfig":"29"},{"size":630,"mtime":1610740606441,"results":"48","hashOfConfig":"29"},{"size":351,"mtime":1610725899012,"results":"49","hashOfConfig":"29"},{"size":3430,"mtime":1610823151783,"results":"50","hashOfConfig":"29"},{"size":5870,"mtime":1610821798371,"results":"51","hashOfConfig":"29"},{"size":8053,"mtime":1610819495151,"results":"52","hashOfConfig":"29"},{"size":2360,"mtime":1610823282733,"results":"53","hashOfConfig":"29"},{"size":1199,"mtime":1610826061050,"results":"54","hashOfConfig":"29"},{"size":387,"mtime":1610825879096,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1sr1n7j",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\index.js",[],["114","115"],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\App.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\Home.js",["116"],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\services\\authService.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\Register.js",["117","118","119","120","121"],"import RecruiterForm from '../../forms/RecruiterForm'\r\nimport {useState} from 'react'\r\nimport {ButtonGroup, Container, CssBaseline, Grid, Link, makeStyles, Typography} from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\nimport 'fontsource-roboto'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    centerContainer: {\r\n        alignItems: 'center',\r\n        direction: 'column',\r\n        justify: 'center',\r\n    }\r\n}))\r\n\r\nconst Register = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <Grid\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{height: '100vh'}}\r\n            >\r\n                <Grid container\r\n                      spacing={0}\r\n                      direction=\"column\"\r\n                      alignItems=\"center\"\r\n                      justify=\"center\"\r\n                      style={{background: '#efefef', paddingBottom: '20px'}}\r\n                >\r\n                    <Typography component=\"h1\" variant=\"h2\" style={{margin: '10px', color: '#414141'}}>\r\n                        Register as\r\n                    </Typography>\r\n                    <ButtonGroup>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            href=\"/applicantRegister\"\r\n                        >\r\n                            Applicant\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            size=\"large\"\r\n                            href=\"/recruiterRegister\"\r\n                        >\r\n                            Recruiter\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\forms\\RecruiterForm.js",["122"],"import * as yup from 'yup'\r\nimport authService from '../../services/authService'\r\nimport {Formik, Form, Field} from 'formik'\r\nimport {\r\n    Button,\r\n    LinearProgress,\r\n    Typography,\r\n    makeStyles, Container, CssBaseline, Avatar, Grid, Link,\r\n} from '@material-ui/core'\r\nimport {\r\n    TextField,\r\n} from 'formik-material-ui'\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport {useState} from 'react'\r\nimport {Alert} from '@material-ui/lab'\r\nimport useStyles from '../styles/formStyles'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst wordCount = (str) => {\r\n    return str.split(' ')\r\n        .filter(function (n) {\r\n            return n !== ''\r\n        })\r\n        .length\r\n}\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .required('Password is required'),\r\n    confirmPassword: yup\r\n        .string('Enter your password')\r\n        .required('Confirm your password')\r\n        .oneOf([yup.ref('password')], 'Password does not match'),\r\n    name: yup\r\n        .string('Enter your name')\r\n        .required('Name is required'),\r\n    bio: yup\r\n        .string('Enter your bio')\r\n        .test('wordcount',\r\n            'Bio is limited to 250 characters',\r\n            (v, c) => !v || wordCount(v) <= 250),\r\n    contactNumber: yup\r\n        .string('Enter your contact number')\r\n        .required('Contact number is required')\r\n})\r\n\r\n\r\nconst App = ({setMessage, classes, setRegistered}) => (\r\n    <Formik\r\n        initialValues={{\r\n            email: '',\r\n            name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            bio: '',\r\n            contactNumber: ''\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={async (values, {setSubmitting}) => {\r\n            console.log('Submitting')\r\n            try {\r\n                const regBody = {...values, type: 'recruiter'}\r\n                const savedUser = await authService.register(regBody)\r\n                setMessage(null)\r\n                console.log('savedUser', savedUser)\r\n                setSubmitting(false)\r\n                setRegistered(true)\r\n            } catch (err) {\r\n                console.log('err', err.response.data.error)\r\n                setMessage(err.response.data.error)\r\n                setSubmitting(false)\r\n            }\r\n        }}\r\n    >\r\n        {({submitForm, isSubmitting, touched, errors}) => (\r\n            <Form className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Field\r\n                            component={TextField}\r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Jon Doe\"\r\n                            autoComplete='off'\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Field\r\n                            component={TextField}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            placeholder=\"jon.doe@example.com\"\r\n                            autoComplete='off'\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Field\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            autoComplete='off'\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Field\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                            label=\"ConfirmPassword\"\r\n                            name=\"confirmPassword\"\r\n                            autoComplete='off'\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Field\r\n                            component={TextField}\r\n                            type=\"text\"\r\n                            label=\"Bio\"\r\n                            name=\"bio\"\r\n                            autoComplete='off'\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Field\r\n                            component={TextField}\r\n                            type=\"text\"\r\n                            label=\"ContactNumber\"\r\n                            name=\"contactNumber\"\r\n                            autoComplete='off'\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    {isSubmitting && <LinearProgress/>}\r\n                </Grid>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className={classes.submit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                        <Link href=\"/login\" variant=\"body2\">\r\n                            Already have an account? Sign in\r\n                        </Link>\r\n                        <br/>\r\n                        <Link href=\"/register\" variant=\"body2\">\r\n                            Choose type of user\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n)\r\n\r\n\r\nconst RecruiterForm = () => {\r\n    const [registered, setRegistered] = useState(false)\r\n    const [message, setMessage] = useState(null)\r\n    const classes = useStyles()\r\n\r\n    if (registered) {\r\n        return <Redirect to=\"/login\" />\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n\r\n                {message && <Alert severity=\"error\">{message}</Alert>}\r\n\r\n                <App setMessage={setMessage} classes={classes} setRegistered={setRegistered} />\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RecruiterForm\r\n\r\n","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\ApplicantRegister.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\forms\\ApplicantForm.js",["123","124"],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\RecruiterRegister.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\styles\\formStyles.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\Login.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\forms\\LoginForm.js",["125"],"import * as yup from 'yup'\r\nimport authService from '../../services/authService'\r\nimport {Formik, Form, Field} from 'formik'\r\nimport {\r\n    Button,\r\n    LinearProgress,\r\n    Typography,\r\n    makeStyles, Container, CssBaseline, Avatar, Grid, Link,\r\n} from '@material-ui/core'\r\nimport {\r\n    TextField,\r\n} from 'formik-material-ui'\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\r\nimport {useState} from 'react'\r\nimport {Alert} from '@material-ui/lab'\r\nimport useStyles from '../styles/formStyles'\r\nimport {useAuth} from '../../context/auth'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup\r\n        .string('Enter your email')\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .required('Password is required')\r\n})\r\n\r\n\r\nconst App = ({classes, onSubmit}) => (\r\n    <Formik\r\n        initialValues={{\r\n            email: '',\r\n            password: ''\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n    >\r\n        {({submitForm, isSubmitting, touched, errors}) => (\r\n            <Form className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Field\r\n                            component={TextField}\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            placeholder=\"jon.doe@example.com\"\r\n                            autoComplete='off'\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Field\r\n                            component={TextField}\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            name=\"password\"\r\n                            autoComplete='off'\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    {isSubmitting && <LinearProgress/>}\r\n                </Grid>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                    className={classes.submit}\r\n                >\r\n                    Submit\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                        <Link href=\"/register\" variant=\"body2\">\r\n                            Don't have an account? Sign up!\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n)\r\n\r\n\r\nconst LoginForm = () => {\r\n    const [isLoggedIn, setLoggedIn] = useState(false)\r\n    const [message, setMessage] = useState(null)\r\n    const classes = useStyles()\r\n\r\n    const { setAuthTokens } = useAuth()\r\n\r\n    const postLogin = async (values, {setSubmitting}) => {\r\n        console.log('Submitting')\r\n        try {\r\n            const regBody = {...values}\r\n            const result = await authService.login(regBody)\r\n            setMessage(null)\r\n            console.log('result', result)\r\n            setSubmitting(false)\r\n            setAuthTokens({token: result.token, type: result.type})\r\n            setLoggedIn(true)\r\n        } catch (err) {\r\n            console.log('err', err.response.data.error)\r\n            setMessage(err.response.data.error)\r\n            setSubmitting(false)\r\n        }\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n\r\n                {message && <Alert severity=\"error\">{message}</Alert>}\r\n                <App classes={classes} onSubmit={postLogin}/>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n\r\n","D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\recruiters\\JobPostDashboard.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\listitems.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\forms\\JobPostForm.js",["126","127","128","129","130","131"],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\utils\\typeOfJob.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\utils\\languages.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\utils\\duration.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\context\\auth.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\auth\\PrivateRoute.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\services\\jobService.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\Admin.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\AppToolBar.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\Test.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\styles\\generalStyles.js",[],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\components\\routes\\recruiters\\JobListDashboard.js",["132","133"],"D:\\OneDrive\\Documents\\College\\Assignments\\SSAD\\job-application-portal\\frontend\\src\\services\\recruiterService.js",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":1,"column":16,"nodeType":"140","messageId":"141","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"142","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":21},{"ruleId":"138","severity":1,"message":"143","line":2,"column":9,"nodeType":"140","messageId":"141","endLine":2,"endColumn":17},{"ruleId":"138","severity":1,"message":"144","line":3,"column":33,"nodeType":"140","messageId":"141","endLine":3,"endColumn":44},{"ruleId":"138","severity":1,"message":"145","line":3,"column":52,"nodeType":"140","messageId":"141","endLine":3,"endColumn":56},{"ruleId":"138","severity":1,"message":"146","line":33,"column":11,"nodeType":"140","messageId":"141","endLine":33,"endColumn":18},{"ruleId":"138","severity":1,"message":"147","line":8,"column":5,"nodeType":"140","messageId":"141","endLine":8,"endColumn":15},{"ruleId":"138","severity":1,"message":"148","line":3,"column":42,"nodeType":"140","messageId":"141","endLine":3,"endColumn":47},{"ruleId":"138","severity":1,"message":"147","line":8,"column":5,"nodeType":"140","messageId":"141","endLine":8,"endColumn":15},{"ruleId":"138","severity":1,"message":"147","line":8,"column":5,"nodeType":"140","messageId":"141","endLine":8,"endColumn":15},{"ruleId":"138","severity":1,"message":"149","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"147","line":10,"column":5,"nodeType":"140","messageId":"141","endLine":10,"endColumn":15},{"ruleId":"138","severity":1,"message":"144","line":12,"column":5,"nodeType":"140","messageId":"141","endLine":12,"endColumn":16},{"ruleId":"138","severity":1,"message":"150","line":13,"column":5,"nodeType":"140","messageId":"141","endLine":13,"endColumn":11},{"ruleId":"138","severity":1,"message":"145","line":15,"column":5,"nodeType":"140","messageId":"141","endLine":15,"endColumn":9},{"ruleId":"138","severity":1,"message":"151","line":24,"column":8,"nodeType":"140","messageId":"141","endLine":24,"endColumn":24},{"ruleId":"138","severity":1,"message":"152","line":3,"column":17,"nodeType":"140","messageId":"141","endLine":3,"endColumn":33},{"ruleId":"153","severity":1,"message":"154","line":24,"column":8,"nodeType":"155","endLine":24,"endColumn":10,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'RecruiterForm' is defined but never used.","'useState' is defined but never used.","'CssBaseline' is defined but never used.","'Link' is defined but never used.","'classes' is assigned a value but never used.","'makeStyles' is defined but never used.","'getIn' is defined but never used.","'authService' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'withMobileDialog' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authTokens.token'. Either include it or remove the dependency array.","ArrayExpression",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [authTokens.token]",{"range":"162","text":"163"},[835,837],"[authTokens.token]"]